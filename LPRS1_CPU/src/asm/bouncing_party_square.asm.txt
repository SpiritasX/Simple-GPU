.data
7                ;; Adresa boje u memoriji
0                ;; frame counter
1                ;; max_frame = 1, fps = 60/max_frame
0x300            ;; Pocetna adresa graficke. Krajnja je start+6
0x340            ;; Frame sync
640              ;; Maks x vrednost
480              ;; Maks y vrednost
0                ;; Adresa u memoriji graficke
48               ;; Boja (48 = 110000, crvena)
0                ;; x1
0                ;; y1
50               ;; x2
50               ;; y2
3                ;; dx
1                ;; dy

.text

rising_edge:
	sub R0, R0, R0
	inc R0, R0
	inc R0, R0
	inc R0, R0
	inc R0, R0
	ld  R7, R0

wait_zero:
	ld  R1, R7
	jmpnz wait_zero
wait_one:
	ld  R1, R7
	jmpz wait_one


;; Slanje pravougaonika

	dec R0, R0
	ld  R1, R0

	sub R0, R0, R0
	ld  R0, R0

	st  R0, R1

	inc R0, R0
	ld  R3, R0
	inc R1, R1
	st  R3, R1

	inc R0, R0
	ld  R3, R0
	inc R1, R1
	st  R3, R1

	inc R0, R0
	ld  R3, R0
	inc R1, R1
	st  R3, R1
	
	inc R0, R0
	ld  R3, R0
	inc R1, R1
	st  R3, R1

	inc R0, R0
	ld  R3, R0
	inc R1, R1
	st  R3, R1

	sub R0, R0, R0
	ld  R0, R0
	inc R1, R1
	st  R0, R1

;; Kraj slanja

count_frames_begin:
	sub R0, R0, R0
	inc R0, R0
	ld  R1, R0
	inc R0, R0
	ld  R2, R0
	dec R0, R0
	inc R1, R1
	sub R2, R2, R1
	jmpz count_frames_heartbeat
	st  R1, R0
	jmp rising_edge
count_frames_heartbeat:
	sub R1, R1, R1
	st  R1, R0
count_frames_end:


;; R0 = temp
;; R1 = x1/y1
;; R2 = x2/y2
;; R3 = dx/dy
;; R4 = max x/y

x_move:

	sub R0, R0, R0
	inc R0, R0
	inc R0, R0
	inc R0, R0
	inc R0, R0
	inc R0, R0
	ld  R4, R0

	shl R0, R0
	dec R0, R0
	ld  R1, R0

	inc R0, R0
	inc R0, R0
	ld  R2, R0

	inc R0, R0
	inc R0, R0
	ld  R3, R0




	add R1, R1, R3
	add R2, R2, R3

	mov R3, R3
	jmpns else_x
	
	mov R1, R1
	jmps reset_x
	jmp end_x

else_x:
	sub R7, R4, R2
	jmps reset_x
	jmp end_x

reset_x:
	not R3, R3
	inc R3, R3

	add R1, R1, R3
	add R1, R1, R3
	add R2, R2, R3
	add R2, R2, R3

end_x:

	st  R3, R0
	dec R0, R0
	dec R0, R0
	st  R2, R0
	dec R0, R0
	dec R0, R0
	st  R1, R0
	

y_move:
	sub R0, R0, R0
	inc R0, R0
	inc R0, R0
	inc R0, R0
	inc R0, R0
	inc R0, R0
	inc R0, R0
	ld  R4, R0

	inc R0, R0
	inc R0, R0
	inc R0, R0
	inc R0, R0
	ld  R1, R0

	inc R0, R0
	inc R0, R0
	ld  R2, R0

	inc R0, R0
	inc R0, R0
	ld  R3, R0




	add R1, R1, R3
	add R2, R2, R3

	mov R3, R3
	jmpns else_y
	
	mov R1, R1
	jmps reset_y
	jmp end_y

else_y:
	sub R7, R4, R2
	jmps reset_y
	jmp end_y

reset_y:
	not R3, R3
	inc R3, R3

	add R1, R1, R3
	add R1, R1, R3
	add R2, R2, R3
	add R2, R2, R3

end_y:

	st  R3, R0
	dec R0, R0
	dec R0, R0
	st  R2, R0
	dec R0, R0
	dec R0, R0
	st  R1, R0


kraj:
	sub R0, R0, R0
	ld  R0, R0
	inc R0, R0
	ld  R1, R0
	dec R1, R1
	st  R1, R0
	jmp rising_edge

/*
x1 += dx
x2 += dx

if (dx < 0)
{
	if (x1 < 0)
	{
		dx = -dx
		x1 += dx
		x1 += dx
		x2 += dx
		x2 += dx
	}
} else
{
	if (x2 > 640)
	{
		dx = -dx
		x1 += dx
		x1 += dx
		x2 += dx
		x2 += dx
	}
}
*/

/*
	Primer slanja nula instrukcije u registar 0
	(ciscenje registra)

	sub R0, R0, R0

	sub R1, R1, R1
	add R1, R1, R6
	st  R0, R1 ;; addr = 00000000 (start)
	inc R1, R1
	st  R0, R1 ;; addr = 00000001 (boja)
	inc R1, R1
	st  R0, R1 ;; addr = 00000010 (x1)
	inc R1, R1
	st  R0, R1 ;; addr = 00000011 (y1)
	inc R1, R1
	st  R0, R1 ;; addr = 00000100 (x2)
	inc R1, R1
	st  R0, R1 ;; addr = 00000101 (y2)
	inc R1, R1
	st  R0, R1 ;; addr = 00000110 (end)
*/